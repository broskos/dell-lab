
heat_template_version: rocky
description: >
  Software Config to drive os-net-config to configure VLANs for the ComputeEdge1 role.
parameters:
  InternalApiSupernet:
    type: string
  TenantSupernet:
    type: string
  ControlPlaneSupernet:
    type: string
  ControlPlaneEdge1SubnetCidr:
    type: string
  ControlPlaneEdge2SubnetCidr:
    type: string
  ControlPlaneEdge1DefaultRoute:
    type: string
  ControlPlaneEdge2DefaultRoute:
    type: string
  ControlPlaneIp:
    default: ''
    description: IP address/subnet on the ctlplane network
    type: string
  ControlPlaneSubnetCidr:
    default: ''
    description: >
      The subnet CIDR of the control plane network. (The parameter is
      automatically resolved from the ctlplane subnet's cidr attribute.)
    type: string
  InternalApiEdge1IpSubnet:
    default: ''
    description: IP address/subnet on the internal_api_edge1 network
    type: string
  TenantEdge1IpSubnet:
    default: ''
    description: >
      The subnet CIDR of the control plane network. (The parameter is
      automatically resolved from the ctlplane subnet's cidr attribute.)
    type: string
  ControlPlaneDefaultRoute:
    default: ''
    description: The default route of the control plane network. (The parameter
      is automatically resolved from the ctlplane subnet's gateway_ip attribute.)
    type: string
  ControlPlaneStaticRoutes:
    default: []
    description: >
      Routes for the ctlplane network traffic.
      JSON route e.g. [{'destination':'10.0.0.0/16', 'nexthop':'10.0.0.1'}]
      Unless the default is changed, the parameter is automatically resolved
      from the subnet host_routes attribute.
    type: json
  ControlPlaneMtu:
    default: 1500
    description: The maximum transmission unit (MTU) size(in bytes) that is
      guaranteed to pass through the data path of the segments in the network.
      (The parameter is automatically resolved from the ctlplane network's mtu attribute.)
    type: number
  StorageInterfaceRoutes:
    default: []
    description: >
      Routes for the storage network traffic.
      JSON route e.g. [{'destination':'10.0.0.0/16', 'nexthop':'10.0.0.1'}]
      Unless the default is changed, the parameter is automatically resolved
      from the subnet host_routes attribute.
    type: json
  StorageMgmtInterfaceRoutes:
    default: []
    description: >
      Routes for the storage_mgmt network traffic.
      JSON route e.g. [{'destination':'10.0.0.0/16', 'nexthop':'10.0.0.1'}]
      Unless the default is changed, the parameter is automatically resolved
      from the subnet host_routes attribute.
    type: json
  InternalApiInterfaceDefaultRoute:
    type: string
  StorageIpSubnet:
    default: ''
    description: IP address/subnet on the storage network
    type: string
  StorageNetworkVlanID:
    default: 170
    description: Vlan ID for the storage network traffic.
    type: number
  StorageMtu:
    default: 1500
    description: The maximum transmission unit (MTU) size(in bytes) that is
      guaranteed to pass through the data path of the segments in the
      Storage network.
    type: number
  InternalApiEdge1NetworkVlanID:
    default: 1130
    description: Vlan ID for the internal_api_edge1 network traffic.
    type: number
  TenantEdge1NetworkVlanID:
    default: 1201
    description: Vlan ID for the tenant_edge1 network traffic.
    type: number
  InternalApiInterfaceDefaultRoute:
    default: '192.168.130.62'
    description: default route for the internal_api network
    type: string
  ExternalInterfaceDefaultRoute:
    default: '172.17.119.62'
    description: default route for the external network
    type: string
  InternalApiEdge1InterfaceDefaultRoute:
    default: '192.168.130.126'
    description: default route for the internal_api_edge1 network
    type: string
  TenantEdge1InterfaceDefaultRoute:
    default: '192.168.201.126'
    description: default route for the tenant_edge1 network
    type: string

  DnsServers: # Override this via parameter_defaults
    default: []
    description: >
      DNS servers to use for the Overcloud (2 max for some implementations).
      If not set the nameservers configured in the ctlplane subnet's
      dns_nameservers attribute will be used.
    type: comma_delimited_list
  DnsSearchDomains: # Override this via parameter_defaults
    default: []
    description: A list of DNS search domains to be added (in order) to resolv.conf.
    type: comma_delimited_list

  BondInterfaceOvsOptions:
    default: bond_mode=active-backup
    description: 'The bonding_options or bonding_options string for the bond
      interface. Set things like lacp=active and/or bond_mode=balance-slb
      for OVS bonds or like mode=4 for Linux bonds using this option.'
    type: string
resources:

  MinViableMtu:
    # This resource resolves the minimum viable MTU for interfaces, bonds and
    # bridges that carry multiple VLANs. Each VLAN may have different MTU. The
    # bridge, bond or interface must have an MTU to allow the VLAN with the
    # largest MTU.
    type: OS::Heat::Value
    properties:
      type: number
      value:
        yaql:
          expression: $.data.max()
          data:
            - {get_param: ControlPlaneMtu}
            - {get_param: StorageMtu}

  OsNetConfigImpl:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config:
        str_replace:
          template:
            get_file: /usr/share/openstack-tripleo-heat-templates/network/scripts/run-os-net-config.sh
          params:
            $network_config:
              network_config:
              - type: ovs_bridge
                name: br-tenant
                mtu:
                  get_attr: [MinViableMtu, value]
                use_dhcp: false
                dns_servers:
                  get_param: DnsServers
                domain:
                  get_param: DnsSearchDomains
                addresses:
                - ip_netmask:
                    list_join:
                    - /
                    - - get_param: ControlPlaneIp
                      - get_param: ControlPlaneEdge1SubnetCidr
                routes:
                  list_concat_unique:
                    - get_param: ControlPlaneStaticRoutes
                    - - default: true
                        next_hop:
                          get_param: ControlPlaneEdge1DefaultRoute
                members:
                - type: linux_bond
                  name: bond0
                  bonding_options:
                    get_param: BondInterfaceOvsOptions
                  mtu:
                    get_attr: [MinViableMtu, value]
                  # force the MAC address of the bridge to this interface
                  members:
                  - type: interface
                    name: nic1
                    # force the MAC address of the bridge to this interface
                    primary: true
                  - type: interface
                    name: nic2
                - type: vlan
                  vlan_id:
                    get_param: InternalApiEdge1NetworkVlanID
                  addresses:
                  - ip_netmask:
                      get_param: InternalApiEdge1IpSubnet
                  routes:
                  - ip_netmask:
                      get_param: InternalApiSupernet
                    next_hop:
                      get_param: InternalApiEdge1InterfaceDefaultRoute
                - type: vlan
                  vlan_id:
                    get_param: TenantEdge1NetworkVlanID
                  addresses:
                  - ip_netmask:
                      get_param: TenantEdge1IpSubnet
                  routes:
                  - ip_netmask:
                      get_param: TenantSupernet
                    next_hop:
                      get_param: TenantEdge1InterfaceDefaultRoute
              - type: ovs_bridge
                name: br-mgmt
                use_dhcp: false
                mtu: 9000
                members:
                - type: linux_bond
                  name: bond1
                  mtu: 9000
                  bonding_options:
                    get_param: BondInterfaceOvsOptions
                  members:
                  - type: interface
                    name: p1p1
                    mtu: 9000
                    # force the MAC address of the bridge to this interface
                    primary: true
                  - type: interface
                    name: p1p2
                    mtu: 9000
outputs:
  OS::stack_id:
    description: The OsNetConfigImpl resource.
    value:
      get_resource: OsNetConfigImpl